---
import "@fontsource-variable/space-grotesk";
import { ClientRouter } from "astro:transitions";
import GoogleAnalytics from "~components/GoogleAnalytics.astro";
interface Props {
  title: string;
}

---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="My CS Journey is a blog where I share my journey as a Computer Science student."
    />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Onur's CS Journey</title>
    <ClientRouter />
    <GoogleAnalytics />

    <!-- MathJax Configuration -->
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [
            ["$", "$"],
            ["\\(", "\\)"],
          ],
          displayMath: [["$$", "$$"], ["\\[", "\\]"]], 
          processEscapes: true,
        },
      });
    </script>
    <script type="text/javascript">
      if (window.MathJax) {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
      }
    </script>
    <!-- MathJax Script -->
    <script
      type="text/javascript"
      src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"
    ></script>
  </head>
  <body class="relative isolate font-sans bg-tahiti selection:bg-selection">
    <div class="bg-grid"></div>
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --brand-color: hsl(210 10% 15%);
    --content-color: hsl(210 10% 30%);
    --tahiti-color: #ffffff;
    --icon-fill: var(--content-color);
    --icon-fill-hover: var(--brand-color);
    --selection-color: #a3ccf566;
    --grid-line-color: #d8dde5;
  }

  [data-theme="dark"] {
    --brand-color: #99a2ff;
    --content-color: #b8b4d3;
    --tahiti-color: #151724;
    --icon-fill: var(--content-color);
    --icon-fill-hover: var(--brand-color);
    --selection-color: #a3ccf526;
    --grid-line-color: #23262d;
  }
</style>

<style>
  .bg-grid {
    position: absolute;
    inset: 0;
    z-index: -30;
    mask-image: linear-gradient(
      to bottom,
      #ffffff22 0%,
      #ffffffcc 50%,
      #ffffff22 100%
    );
    background-size: 20px 20px;
    background-image: linear-gradient(
        to right,
        var(--grid-line-color) 1px,
        transparent 1px
      ),
      linear-gradient(to bottom, var(--grid-line-color) 1px, transparent 1px);
    background-position: top center;
    image-rendering: pixelated;
  }
</style>
